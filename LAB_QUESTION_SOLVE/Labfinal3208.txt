create table student_info
(
	id varchar(20) not null,
	name varchar(30),
	dept varchar(10),
	year varchar(20),
	constraint pk1 primary key(id)
);

insert into student_info values('ES09010','Mongol','ESRM','3rd');
insert into student_info values('CE08010','rasel','cse','4th');
insert into student_info values('CE09010','faysal','cse','3rd');
insert into student_info values('IT10034','abir','ict','2nd');
insert into student_info values('TE11036','shohel','textile','1st');
insert into student_info values('IT09012','ashraful','ict','2nd');
insert into student_info values('TE10234','shakil','textile','2nd');
insert into student_info values('ES08010','nazim','ESRM','4th');

create table student_detail
(
	student_id varchar(20) not null,
	account_no number(30),
	district varchar(15),
	income number(20),
	constraint pk2 primary key(student_id),
	constraint fk1 foreign key(student_id)
	references student_info(id)
);
insert into student_detail values('ES09010','888','pabna','9500');
insert into student_detail values('CE08010','111','dhaka','4500');
insert into student_detail values('CE09010','222','khulna','7000');
insert into student_detail values('IT10034','333','rajshahi','2000');
insert into student_detail values('TE11036','444','barishal','9000');
insert into student_detail values('IT09012','555','gazipur','3000');
insert into student_detail values('TE10234','666','tangail','5600');
insert into student_detail values('ES08010','777','bogra','3500');


create table student_account
(
	student_id varchar(20) not null,
	mobile_no number(30),
	branch_name varchar(15),
	balance number(20),
	constraint pk3 primary key(student_id),
	constraint fk2 foreign key(student_id)
	references student_info(id)
);
insert into student_account values('CE08010','01722410845','dhaka','5600');
insert into student_account values('CE09010','01923456789','khulna','2000');
insert into student_account values('IT10034','01923456756','rajshahi','3000');
insert into student_account values('TE11036','01722670845','barishal','8000');
insert into student_account values('IT09012','01722410890','gazipur','5500');
insert into student_account values('TE10234','01722456845','tangail','6500');
insert into student_account values('ES08010','01778410845','bogra','7500');
insert into student_account values('ES09010','01722760845','pabna','8500');



1)select distinct id,name,dept,mobile_no,income,balance 
from student_info,student_detail,student_account where 
student_info.id=student_detail.student_id and student_detail.student_id=student_account.student_id; 


4)select name from student_info where name like '%sh%' or name like '%ar%';


5)select count(*)  from student_detail where income between 1000 and 5000;

2)select distinct dept,balance,income from student_info,student_detail,student_account where 
student_info.id=student_detail.student_id and student_detail.student_id=student_account.student_id
group by dept,balance,income having avg(balance)>3000;


3)update student_account a set a.balance=case when a.balance>4000
then a.balance+((a.balance*15)/100)
else a.balance+((a.balance*10)/100)
end;

6)update student_info set name='shafiq' where id in(select a.student_id from student_account a where a.balance>7500);
 


/*FUNCTION CREATION*/

CREATE OR REPLACE FUNCTION GET_BALANCE(mobile in number)
RETURN NUMBER
Is acc_balance number(10,2);
begin
select a.balance
into acc_balance
from student_account a
where a.mobile_no=mobile;
return(acc_balance);
end;
/

/* Run Function*/
select GET_BALANCE(01722410845) from dual;


/*FUNCTION CREATION*/

CREATE OR REPLACE FUNCTION GET_INCOME(acc_no in number)
RETURN NUMBER
Is net_income number(10,2);
begin
select a.income
into net_income
from student_detail a
where a.account_no=acc_no;
return(net_income);
end;
/

/* Run Function*/
select GET_INCOME(111) from dual;

/*FUNCTION CREATION*/

CREATE OR REPLACE FUNCTION GET_NAME(stdnt_id in varchar)
RETURN varchar
Is student_name varchar(15);
begin
select a.name
into student_name
from student_info a
where a.id=stdnt_id;
return(student_name);
end;
/

/* Run Function*/
select GET_NAME('CE08010') from dual;

/*joining operation*/
select id,name,account_no,district,mobile_no,balance 
from student_info left join student_detail on  
student_info.id=student_detail.student_id left join student_account 
on student_detail.student_id=student_account.student_id;




/***********************************************trigger-a*******************************************************************/





create table myaudit(
id VARCHAR2(10) NOT NULL,
old_value VARCHAR2(30),
new_value VARCHAR2(30)
);

create table Employee(
ID VARCHAR2(2) NOT NULL,
First_Name VARCHAR2(10),
Last_Name VARCHAR2(10),
Start_Date DATE,
End_Date DATE,
Salary Number(8,2),
City VARCHAR2(10),
Description VARCHAR2(11)
);


---------------------------------------------------------------------------------------------------------------------------
insert into Employee values ('01','Jason',    'Martin',  to_date('19960725','YYYYMMDD'), to_date('20060725','YYYYMMDD'), 1234.56, 'Toronto',  'Programmer');
insert into Employee values('02','Alison',   'Mathews', to_date('19760321','YYYYMMDD'), to_date('19860221','YYYYMMDD'), 6661.78, 'Vancouver','Tester');
insert into Employee values('03','James',    'Smith',   to_date('19781212','YYYYMMDD'), to_date('19900315','YYYYMMDD'), 6544.78, 'Vancouver','Tester');
insert into Employee values('04','Celia',    'Rice',    to_date('19821024','YYYYMMDD'), to_date('19990421','YYYYMMDD'), 2344.78, 'Vancouver','Manager');
insert into Employee values('05','Robert',   'Black',   to_date('19840115','YYYYMMDD'), to_date('19980808','YYYYMMDD'), 2334.78, 'Vancouver','Tester');
insert into Employee values('07','David',    'Larry',   to_date('19901231','YYYYMMDD'), to_date('19980212','YYYYMMDD'), 7897.78,'New York',  'Manager');


-------------------------------------TRigger---------------------------------------------------------------------------------
CREATE OR REPLACE TRIGGER before_employee_salary_update
  BEFORE UPDATE OF salary
  ON employee
 FOR EACH ROW WHEN (new.salary < old.salary * 0.75)
  BEGIN
  dbms_output.put_line('id = ' || :old.id);
  dbms_output.put_line('Old salary = ' || :old.salary);
  dbms_output.put_line('New salary = ' || :new.salary);
  dbms_output.put_line('The salary reduction is more than 25%');
 INSERT INTO Myaudit (id, old_value, new_value)VALUES (:old.id, :old.salary, :new.salary);
END before_employee_salary_update;
----------------------------------------------------------------------------------------------------------------------------
Effect:

update employee set salary = 1;
select * from employee;
select * from myaudit;







/***********************************************trigger-b*******************************************************************/






create table myaudit(
id VARCHAR2(10) NOT NULL,
old_value VARCHAR2(30),
new_value VARCHAR2(30)
);

create table Employee(
ID VARCHAR2(2) NOT NULL,
First_Name VARCHAR2(10),
Last_Name VARCHAR2(10),
Start_Date DATE,
End_Date DATE,
Salary Number(8,2),
City VARCHAR2(10),
Description VARCHAR2(11)
);


---------------------------------------------------------------------------------------------------------------------------
insert into Employee values ('01','Jason',    'Martin',  to_date('19960725','YYYYMMDD'), to_date('20060725','YYYYMMDD'), 1234.56, 'Toronto',  'Programmer');
insert into Employee values('02','Alison',   'Mathews', to_date('19760321','YYYYMMDD'), to_date('19860221','YYYYMMDD'), 6661.78, 'Vancouver','Tester');
insert into Employee values('03','James',    'Smith',   to_date('19781212','YYYYMMDD'), to_date('19900315','YYYYMMDD'), 6544.78, 'Vancouver','Tester');
insert into Employee values('04','Celia',    'Rice',    to_date('19821024','YYYYMMDD'), to_date('19990421','YYYYMMDD'), 2344.78, 'Vancouver','Manager');
insert into Employee values('05','Robert',   'Black',   to_date('19840115','YYYYMMDD'), to_date('19980808','YYYYMMDD'), 2334.78, 'Vancouver','Tester');
insert into Employee values('07','David',    'Larry',   to_date('19901231','YYYYMMDD'), to_date('19980212','YYYYMMDD'), 7897.78,'New York',  'Manager');


-------------------------------------TRigger---------------------------------------------------------------------------------
CREATE OR REPLACE TRIGGER before_employee_salary_update
  before insert
  ON employee
 FOR EACH ROW
  BEGIN
  --dbms_output.put_line('id = ' || :old.id);
  --dbms_output.put_line('Old salary = ' || :old.salary);
  dbms_output.put_line('New salary = ' || :new.salary);
  dbms_output.put_line('The salary reduction is more than 25%');
 INSERT INTO Myaudit (id, new_value)VALUES ( :new.id, :new.salary);
END before_employee_salary_update;
/
----------------------------------------------------------------------------------------------------------------------------
Effect:

update employee set salary = 0;
select * from employee;
select * from myaudit;

insert into employee values('11','j',    'M',  to_date('19960726','YYYYMMDD'), to_date('20060727','YYYYMMDD'), 12345.56, 'T',  'Programmer');
 



*************************** Procedure *****************************



create table std11(
id varchar2(20),
dept varchar2(20)
);

create table std22(
id varchar2(20),
name varchar2(20)
);

create table std33(
id varchar2(20),
mob varchar2(20) 
);
create table std1169(
dept varchar2(20),
name varchar2(20),
mob varchar2(20)
);
insert into std11 values('10040','cse');
insert into std11 values('10018','ict');

insert into std22 values('10040','sattar');
insert into std22 values('10018','tamim');

insert into std33 values('10040','017220');
insert into std33 values('10018','019220');
Create or replace procedure select_sp1169
(
p_id in std11.id%type,
testcurpp out sys_refcursor
)is
begin
open testcurpp for
select std11.dept,std22.name,std33.mob from std11 left join std22 on std11.id=std22.id left join std33 on std22.id=std33.id 
where id=p_id;

end;
/
set serveroutput on format wrap
declare 
testcurpp sys_refcursor;
rowp std1169%rowtype;
begin
select_sp1169('10040',testcurpp);
loop
fetch testcurpp into rowp;
exit when testcurpp%notfound;
dbms_output.put_line(rowp.dept||':'||rowp.name||':'||rowp.mob);
end loop;
close testcurpp; 
end;
.
run;
		